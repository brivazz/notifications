version: '3.8'

networks:
  movies_network:
    external: true

services:
  notifications_rabbitmq:
    image: rabbitmq:${RABBIT_VERSION}
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - movies_network
    ports:
      - ${RABBIT_PORT}:${RABBIT_PORT}
      - ${RABBIT_MANAGEMENT_PORT}:${RABBIT_MANAGEMENT_PORT}

  notifications_mongo_db:
    image: mongo:${MONGO_VERSION}
    env_file:
      - .env
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:${MONGO_PORT}/test --quiet
      interval: 2s
      timeout: 5s
      retries: 120

  mongo-express:
    image: mongo-express:${MONGO_EXPRESS_VERSION}
    restart: unless-stopped
    ports:
      - ${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_PORT}
    environment:
      ME_CONFIG_MONGODB_SERVER: notifications_mongo_db
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
    depends_on:
      notifications_mongo_db:
        condition: service_healthy
    networks:
      - movies_network


  notifications_event_api:
    build:
      context: ./components/event_api
    image: notification_event_api-image
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      notifications_rabbitmq:
        condition: service_healthy
    networks:
      - movies_network
    expose:
      - ${PORT}

  notification_nginx:
    image: nginx:${NGINX_VERSION}
    container_name: notification_nginx
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/site.conf:/etc/nginx/conf.d/site.conf
    depends_on:
      notifications_event_api:
        condition: service_started
    ports:
      - ${NGINS_PORT}:${NGINS_PORT}
    networks:
      - movies_network

  notification_worker:
    build:
      context: ./components/worker
    image: notification_worker-image
    env_file:
      - .env
    container_name: notification_worker
    restart: unless-stopped
    depends_on:
      notifications_mongo_db:
        condition: service_healthy
      notifications_event_api:
        condition: service_started
      notifications_rabbitmq:
        condition: service_healthy
    networks:
      - movies_network

  notification_scheduler:
    build:
      context: ./components/scheduler
    image: notiication_scheduler_image
    env_file:
      - .env
    container_name: notification_scheduler
    restart: unless-stopped
    depends_on:
      notifications_rabbitmq:
        condition: service_healthy
      notifications_worker:
        condition: service_healthy
    networks:
      - movies_network
